{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2023-02-14T06:38:24.033Z","updated":"2023-02-14T06:38:24.033Z","comments":false,"path":"/404.html","permalink":"http://example.com/404.html","excerpt":"","text":""},{"title":"分类","date":"2023-02-14T06:38:48.618Z","updated":"2023-02-14T06:38:48.618Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2023-02-14T06:38:53.914Z","updated":"2023-02-14T06:38:53.914Z","comments":false,"path":"repository/index.html","permalink":"http://example.com/repository/index.html","excerpt":"","text":""},{"title":"书单","date":"2023-02-14T06:38:45.815Z","updated":"2023-02-14T06:38:45.815Z","comments":false,"path":"books/index.html","permalink":"http://example.com/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2023-02-14T06:38:42.968Z","updated":"2023-02-14T06:38:42.968Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"标签","date":"2023-02-14T07:32:35.025Z","updated":"2023-02-14T07:32:35.025Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2023-02-14T06:38:51.211Z","updated":"2023-02-14T06:38:51.211Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"vivado使用（二）","date":"2023-02-15T16:05:31.435Z","updated":"2023-02-16T01:20:19.910Z","comments":true,"path":"2023/02/16/vivado使用（二）/","link":"","permalink":"http://example.com/2023/02/16/vivado%E4%BD%BF%E7%94%A8%EF%BC%88%E4%BA%8C%EF%BC%89/","excerpt":"","text":"是睡得","categories":[],"tags":[]},{"title":"vivado 安装和使用","slug":"vivado使用（一）","date":"2023-02-15T15:16:38.480Z","updated":"2023-02-15T16:01:51.054Z","comments":true,"path":"2023/02/15/vivado使用（一）/","link":"","permalink":"http://example.com/2023/02/15/vivado%E4%BD%BF%E7%94%A8%EF%BC%88%E4%B8%80%EF%BC%89/","excerpt":"","text":"vivado 安装 从官网下载vivado 之后的安装在网上找个教程，按照提示一步一步安装 vivado 创建新项目 双击 vivado，进入到开始界面，点击创建新项目，选择项目名和安装位置 创建 RTL 项目，并勾选 Do not specify sources at this time 选择对应的部件，即可创建新项目 vivado 添加源文件以及测试文件 在 Sources 框中选中 Design Sources 目录之后点击上方的 ➕ 添加源文件，添加测试文件同理，选中 Simulation Sources 目录之后点击 ➕ 运行 RTL 仿真，选中 Simulation Sources 目录下的子目录 sim_1，右键点击对应按钮 若源文件和测试文件均没有出现错误，则会出现以下界面，可以在右侧观察波形图","categories":[{"name":"神明难再的硬件之旅","slug":"神明难再的硬件之旅","permalink":"http://example.com/categories/%E7%A5%9E%E6%98%8E%E9%9A%BE%E5%86%8D%E7%9A%84%E7%A1%AC%E4%BB%B6%E4%B9%8B%E6%97%85/"}],"tags":[{"name":"vivado","slug":"vivado","permalink":"http://example.com/tags/vivado/"},{"name":"verilog","slug":"verilog","permalink":"http://example.com/tags/verilog/"}]},{"title":"在 WSL 中安装 Java、Scala、sbt","slug":"WSL 安装 java、Scala、sbt","date":"2023-02-14T07:34:24.226Z","updated":"2023-02-15T15:18:26.812Z","comments":true,"path":"2023/02/14/WSL 安装 java、Scala、sbt/","link":"","permalink":"http://example.com/2023/02/14/WSL%20%E5%AE%89%E8%A3%85%20java%E3%80%81Scala%E3%80%81sbt/","excerpt":"","text":"环境支持因为上学期使用 wsl 进行了项目，所以不需要再安装 riscv 交叉编译工具链，只需要安装 chisel 的环境即可 安装 Java 从官网下载 jdk，复制到 wsl 中的相应目录下（/java） 在对应目录解压下载的压缩包1sudo tar zxvf jdk-17_linux-x64_bin.tar.gz 在 ~/.bashrc 中添加环境变量，并执行 source ~/.bashrc1234export JAVA_HOME=/java/jdk-17.0.6export JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATHexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 输入 java -version 验证是否安装成功 注意，vscode 的插件可能需要手动添加 JAVA_HOME，在 settings.json 中输入以下内容1234567&quot;java.autobuild.enabled&quot;: false,&quot;metals.javaHome&quot;: &quot;/java/jdk-17.0.6&quot;, // jdk 压缩包解压的位置&quot;java.configuration.runtimes&quot;: [&#123; &quot;name&quot;: &quot;JavaSE-17&quot;, &quot;path&quot;: &quot;/java/jdk-17.0.6&quot;, &quot;default&quot;: true&#125;], 安装 Scala1sudo apt install scala 安装 sbt 环境 从官网下载 sbt，复制到 wsl 中的相应目录下（~/sbt/） 在对应目录解压下载的压缩包 tar zxvf sbt-1.8.2.tgz，解压后的目录为12345678910111213141516sbt── sbt ├── LICENSE ├── NOTICE ├── bin │ ├── sbt │ ├── sbt-launch.jar │ ├── sbt.bat │ ├── sbtn-aarch64-pc-linux │ ├── sbtn-x86_64-apple-darwin │ ├── sbtn-x86_64-pc-linux │ └── sbtn-x86_64-pc-win32.exe ├── conf │ ├── sbtconfig.txt │ └── sbtopts └── sbt_text 在 sbt 目录下新建 sbt 脚本 sbt_text，输入以下内容12BT_OPTS=&quot;-Xms2048M -Xmx4096M -Xss1M -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256M&quot;java $SBT_OPTS -jar ~/sbt/sbt/bin/sbt-launch.jar &quot;$@&quot; 修改脚本 sbt_text 属性 sudo chmod u+x sbt_text 在 ~/.bashrc 中添加环境变量，并执行 source ~/.bashrc12export SBT_HOME=~/sbt/sbtexport PATH=$&#123;SBT_HOME&#125;/bin:$PATH 输入 sbt version 验证是否安装成功，第一次初始化需要下载依赖包，若下载速度慢或者出现问题，则在 ~/.sbt/ 目录下新建 repositories 文件，添加以下内容12345[repositories]localhuaweicloud-maven: https://repo.huaweicloud.com/repository/maven/maven-central: https://repo1.maven.org/maven2/sbt-plugin-repo: https://repo.scala-sbt.org/scalasbt/sbt-plugin-releases, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext] vscode 安装 wsl 中的 scala 插件，在插件商店搜索 Scala Extension Pack，里面有 13 个扩展包，按照需求安装即可（带有 scala 的即可），不需要安装所有的插件 在 Scala (Metals) 插件的设置中设置 Custom Repositories 和 Coursier Mirror，即在 settings.json 中输入以下内容1234&quot;metals.customRepositories&quot;: [ &quot;https://maven.aliyun.com/repository/central&quot;],&quot;metals.coursierMirror&quot;: &quot;https://maven.aliyun.com/repository/public&quot;, 不出意外，还是不能使用 Metals 插件新建 scala 项目，只会创建出一个空的目录，需要手动创建 build.sbt 文件，之后插件会提示是否需要引入 build 如果还存在其他什么问题，请自行 google","categories":[{"name":"神明难再的硬件之旅","slug":"神明难再的硬件之旅","permalink":"http://example.com/categories/%E7%A5%9E%E6%98%8E%E9%9A%BE%E5%86%8D%E7%9A%84%E7%A1%AC%E4%BB%B6%E4%B9%8B%E6%97%85/"}],"tags":[{"name":"wsl","slug":"wsl","permalink":"http://example.com/tags/wsl/"},{"name":"java","slug":"java","permalink":"http://example.com/tags/java/"},{"name":"scala","slug":"scala","permalink":"http://example.com/tags/scala/"},{"name":"sbt","slug":"sbt","permalink":"http://example.com/tags/sbt/"}]}],"categories":[{"name":"神明难再的硬件之旅","slug":"神明难再的硬件之旅","permalink":"http://example.com/categories/%E7%A5%9E%E6%98%8E%E9%9A%BE%E5%86%8D%E7%9A%84%E7%A1%AC%E4%BB%B6%E4%B9%8B%E6%97%85/"}],"tags":[{"name":"vivado","slug":"vivado","permalink":"http://example.com/tags/vivado/"},{"name":"verilog","slug":"verilog","permalink":"http://example.com/tags/verilog/"},{"name":"wsl","slug":"wsl","permalink":"http://example.com/tags/wsl/"},{"name":"java","slug":"java","permalink":"http://example.com/tags/java/"},{"name":"scala","slug":"scala","permalink":"http://example.com/tags/scala/"},{"name":"sbt","slug":"sbt","permalink":"http://example.com/tags/sbt/"}]}